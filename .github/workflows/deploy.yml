name: CI/CD Deploy Java App to Tomcat10 on EC2

# Trigger deployment on push to staging or master
on:
  push:
    branches:
      - staging
      - master

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    
    steps:
      # 1 Checkout your repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2 Setup Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3 Build WAR file
      - name: Build WAR file
        run: mvn clean package -DskipTests

      # 4 Find and rename WAR file
      - name: Prepare WAR file
        run: |
          WAR_FILE=$(ls target/*.war | head -1)
          cp "$WAR_FILE" staging.war
          echo "WAR file prepared: staging.war"

      # 5 Create SSH key file
      - name: Create SSH key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 6 Clean up staging directory on server
      - name: Clean up staging directory
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo rm -rf /var/lib/tomcat10/webapps/staging*"

      # 7 Copy WAR file to server (just like your manual test)
      - name: Copy WAR file to server
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            staging.war ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/lib/tomcat10/webapps/

      # 8 Verify file was copied
      - name: Verify file copied
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "ls -la /var/lib/tomcat10/webapps/"

      # 9 Set permissions and restart Tomcat
      - name: Configure and restart Tomcat
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/staging.war && \
             sudo chmod 644 /var/lib/tomcat10/webapps/staging.war && \
             sudo systemctl restart tomcat10"

      # 10 Final verification
      - name: Final verification
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sleep 10 && ls -la /var/lib/tomcat10/webapps/ && \
             sudo systemctl status tomcat10 --no-pager"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      # 1 Checkout your repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2 Setup Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3 Build WAR file
      - name: Build WAR file
        run: mvn clean package -DskipTests

      # 4 Find and rename WAR file
      - name: Prepare WAR file
        run: |
          WAR_FILE=$(ls target/*.war | head -1)
          cp "$WAR_FILE" ROOT.war
          echo "WAR file prepared: ROOT.war"

      # 5 Create SSH key file
      - name: Create SSH key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 6 Clean up ROOT directory on server
      - name: Clean up ROOT directory
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo rm -rf /var/lib/tomcat10/webapps/ROOT*"

      # 7 Copy WAR file to server
      - name: Copy WAR file to server
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            ROOT.war ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/lib/tomcat10/webapps/

      # 8 Verify file was copied
      - name: Verify file copied
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "ls -la /var/lib/tomcat10/webapps/"

      # 9 Set permissions and restart Tomcat
      - name: Configure and restart Tomcat
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sudo chown tomcat:tomcat /var/lib/tomcat10/webapps/ROOT.war && \
             sudo chmod 644 /var/lib/tomcat10/webapps/ROOT.war && \
             sudo systemctl restart tomcat10"

      # 10 Final verification
      - name: Final verification
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "sleep 10 && ls -la /var/lib/tomcat10/webapps/ && \
             sudo systemctl status tomcat10 --no-pager"
